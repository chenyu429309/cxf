<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<!-- 在那個包中掃描帶有@Controller的控制層Java文件,如果找到,則說明該Java文件是控制層，並參與處理response和response對象 -->
	<context:component-scan base-package="com.pegatron.*" />

	<!-- 要在头文件中添加“xmlns:aop”的命名申明, 并在“xsi:schemaLocation”中指定aop配置的schema的地址 -->
	<aop:aspectj-autoproxy />

	<!-- 導入資源文件 -->
	<context:property-placeholder location="classpath:init.properties" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass">
			<value>${datasource.driver}</value>
		</property>
		<property name="jdbcUrl">
			<value>${datasource.url}</value>
		</property>
		<property name="user">
			<value>${datasource.username}</value>
		</property>
		<property name="password">
			<value>${datasource.password}</value>
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 配置数据源属性 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 使用 hibernateProperties 属相来配置 Hibernate 原生的属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto"> ${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="hibernate.current_session_context_class">thread</prop> 
				<!-- 二級緩存 -->
				<prop key="hibernate.cache.use_second_level_cache">${cache.use_second_level_cache}</prop>
 				<prop key="hibernate.cache.region.factory_class">${cache.region.factory_class}</prop> 
				<prop key="hibernate.cache.use_query_cache">${cache.use_query_cache}</prop> 
				<prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:ehcache.xml</prop> 
			</props>
		</property>

	<!-- ORM映射 --> 
		<property name="mappingLocations" value="classpath:com/pegatron/hbm/*.hbm.xml"></property>
	</bean>

<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate" >
	<property name="sessionFactory" ref="sessionFactory"></property>
</bean>
	<!-- 配置spring的事務式聲明 -->
	<!-- 1.配置事務管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 2.配置事務屬性，需要事務管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" read-only="false" propagation="REQUIRED" />
			<tx:method name="save*" read-only="false" propagation="REQUIRED" />
			<tx:method name="delete*" read-only="false" propagation="REQUIRED" /> 
			<tx:method name="update*" read-only="false" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice> 
	<!-- 3.配置事物切點，並把切點與事務屬性關聯起來 -->
	<aop:config expose-proxy="true">
		<aop:pointcut expression="execution(* com.pegatron.service.*.*(..))"
			id="txPointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="WEB_INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
</beans>